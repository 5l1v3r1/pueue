#compdef pueue
# ----------------------------------------------------
#
#  Completion script for pueue (https://github.com/nukesor/pueue).
#
# ----------------------------------------------------
# Authors
# -------
#
#  * Arne Beer (privat@arne.beer)
#
# ----------------------------------------------------

_pueue_commands () {
    declare -a subcommands
    subcommands=(add remove edit config switch status  start pause kill send show log clear reset)
    _describe -t pueue-commands "pueue subcommands" subcommands
}

_pueue_subcommand () {
    case "$words[1]" in
        (add)
            _alternative 'command:commands:{_command_names}'
            ;;
        (show)
            _arguments \
                '(-w --watch)'{-w,--watch}'[watch the output of the current process]' \
                '(-k+ --key)'{-k,--key}'[The key of the process to show. Default is the longest running process.]:key'
            ;;
        (kill)
            _arguments \
                '(-s+ --signal)'{-s,--signal=}'[The kill signal]:signal:(hup int quit kill term cont stop)' \
                '(-a --all)'{-a,--all}'[Specify, if the shell parent process should be killed as well.]'
            ;;
        (pause)
            _arguments \
                '(-w --wait)'{-w,--wait}'[If the daemon should be paused, wait for running processes to finish on their own.]'
            ;;
        (config)
            _arguments \
                '1:config:(maxProcesses customShell)'
            ;;
        (*)
            _message 'Unknown subcommand'
    esac
}

_pueue () {
    local curcontext="$curcontext" state line
    typeset -A opt_args

    _arguments -C \
        '-h[get help]:' \
        '--daemon[Start the daemon]:' \
        '--no-daemon[Start the daemon bound to the shell]:' \
        '--stop-daemon[Stop the daemon]:' \
        '(-): :->command' \
        '(-)*:: :->arguments'

    case $state in
        (command)
            _pueue_commands
            ;;
        (arguments)
            curcontext=${curcontext%:*:*}:pueue-$words[1]:
            _pueue_subcommand
            ;;
    esac
}

_pueue "$@"

